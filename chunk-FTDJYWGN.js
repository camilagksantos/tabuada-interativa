import{j as f}from"./chunk-AIFKZROB.js";var P=class l{STORAGE_KEY="tabuada_historico";constructor(){}salvarPartida(e){let o=this.obterHistorico();o.push(e),localStorage.setItem(this.STORAGE_KEY,JSON.stringify(o))}obterHistorico(){let e=localStorage.getItem(this.STORAGE_KEY);return e?JSON.parse(e):[]}limparHistorico(){localStorage.removeItem(this.STORAGE_KEY)}deletarPartida(e){let a=this.obterHistorico().filter(c=>c.id!==e);localStorage.setItem(this.STORAGE_KEY,JSON.stringify(a))}getJogadoresUnicos(){let e=this.obterHistorico(),o=new Set;return e.forEach(a=>{o.add(a.nomeJogador.toLowerCase().trim())}),Array.from(o).sort()}getPartidasPorJogador(e){let o=this.obterHistorico(),a=e.toLowerCase().trim();return o.filter(c=>c.nomeJogador.toLowerCase().trim()===a)}getPartidasPorPeriodo(e){let o=this.obterHistorico(),a=new Date;return a.setDate(a.getDate()-e),o.filter(c=>new Date(c.data)>=a)}getEstatisticasGerais(e){let o=e?this.getPartidasPorPeriodo(e):this.obterHistorico();if(o.length===0)return{totalPartidas:0,taxaAcertoMedia:0,tempoMedioPorQuestao:0,tabuadasMaisPraticadas:[]};let a=o.reduce((i,t)=>i+t.corretos,0),c=o.reduce((i,t)=>i+t.incorretos,0),n=a+c,h=n>0?a/n*100:0,g=o.reduce((i,t)=>i+t.tempoTotalSegundos,0),d=n>0?g/n:0,u=new Map;o.forEach(i=>{i.tabuadas.forEach(t=>{u.set(t,(u.get(t)||0)+1)})});let m=Array.from(u.entries()).map(([i,t])=>({tabuada:i,vezes:t})).sort((i,t)=>t.vezes-i.vezes).slice(0,3);return{totalPartidas:o.length,taxaAcertoMedia:Math.round(h),tempoMedioPorQuestao:Math.round(d),tabuadasMaisPraticadas:m}}getEstatisticasPorJogador(e){let o=this.getPartidasPorJogador(e);if(o.length===0)return{totalPartidas:0,taxaAcerto:0,melhorResultado:0,tabuadasPraticadas:[],questoesDificeis:[]};let a=o.reduce((t,r)=>t+r.corretos,0),c=o.reduce((t,r)=>t+r.incorretos,0),n=a+c,h=n>0?Math.round(a/n*100):0,g=Math.max(...o.map(t=>Math.round(t.corretos/(t.corretos+t.incorretos)*100))),d=new Map;o.forEach(t=>{t.tabuadas.forEach(r=>{let s=d.get(r)||{corretos:0,incorretos:0};t.questoes.forEach(b=>{let[p]=b.pergunta.split(" \xD7 ").map(A=>parseInt(A));p===r&&(b.correta?s.corretos++:s.incorretos++)}),d.set(r,s)})});let u=Array.from(d.entries()).map(([t,r])=>{let s=r.corretos+r.incorretos;return{tabuada:t,vezes:s,taxaAcerto:s>0?Math.round(r.corretos/s*100):0}}).sort((t,r)=>r.vezes-t.vezes),m=new Map;o.forEach(t=>{t.questoes.forEach(r=>{let s=m.get(r.pergunta)||{corretos:0,incorretos:0};r.correta?s.corretos++:s.incorretos++,m.set(r.pergunta,s)})});let i=Array.from(m.entries()).map(([t,r])=>{let s=r.corretos+r.incorretos;return{pergunta:t,taxaAcerto:s>0?Math.round(r.corretos/s*100):0}}).filter(t=>t.taxaAcerto<80).sort((t,r)=>t.taxaAcerto-r.taxaAcerto).slice(0,5);return{totalPartidas:o.length,taxaAcerto:h,melhorResultado:g,tabuadasPraticadas:u,questoesDificeis:i}}static \u0275fac=function(o){return new(o||l)};static \u0275prov=f({token:l,factory:l.\u0275fac,providedIn:"root"})};export{P as a};
